Search.setIndex({"alltitles": {"Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Module contents": [[2, "module-pygenalgo"], [3, "module-pygenalgo.engines"], [4, "module-pygenalgo.genome"], [5, "module-pygenalgo.operators"], [6, "module-pygenalgo.operators.crossover"], [7, "module-pygenalgo.operators.migration"], [8, "module-pygenalgo.operators.mutation"], [9, "module-pygenalgo.operators.selection"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"]], "Subpackages": [[2, "subpackages"], [5, "subpackages"]], "Welcome to PyGenAlgo\u2019s documentation!": [[0, "welcome-to-pygenalgo-s-documentation"]], "pygenalgo": [[1, "pygenalgo"]], "pygenalgo package": [[2, "pygenalgo-package"]], "pygenalgo.engines package": [[3, "pygenalgo-engines-package"]], "pygenalgo.engines.auxiliary module": [[3, "module-pygenalgo.engines.auxiliary"]], "pygenalgo.engines.generic_ga module": [[3, "module-pygenalgo.engines.generic_ga"]], "pygenalgo.engines.island_model_ga module": [[3, "module-pygenalgo.engines.island_model_ga"]], "pygenalgo.engines.standard_ga module": [[3, "module-pygenalgo.engines.standard_ga"]], "pygenalgo.genome package": [[4, "pygenalgo-genome-package"]], "pygenalgo.genome.chromosome module": [[4, "module-pygenalgo.genome.chromosome"]], "pygenalgo.genome.gene module": [[4, "module-pygenalgo.genome.gene"]], "pygenalgo.operators package": [[5, "pygenalgo-operators-package"]], "pygenalgo.operators.crossover package": [[6, "pygenalgo-operators-crossover-package"]], "pygenalgo.operators.crossover.crossover_operator module": [[6, "module-pygenalgo.operators.crossover.crossover_operator"]], "pygenalgo.operators.crossover.meta_crossover module": [[6, "module-pygenalgo.operators.crossover.meta_crossover"]], "pygenalgo.operators.crossover.mutli_point_crossover module": [[6, "module-pygenalgo.operators.crossover.mutli_point_crossover"]], "pygenalgo.operators.crossover.order_crossover module": [[6, "module-pygenalgo.operators.crossover.order_crossover"]], "pygenalgo.operators.crossover.partially_mapped_crossover module": [[6, "module-pygenalgo.operators.crossover.partially_mapped_crossover"]], "pygenalgo.operators.crossover.position_based_crossover module": [[6, "module-pygenalgo.operators.crossover.position_based_crossover"]], "pygenalgo.operators.crossover.single_point_crossover module": [[6, "module-pygenalgo.operators.crossover.single_point_crossover"]], "pygenalgo.operators.crossover.uniform_crossover module": [[6, "module-pygenalgo.operators.crossover.uniform_crossover"]], "pygenalgo.operators.genetic_operator module": [[5, "module-pygenalgo.operators.genetic_operator"]], "pygenalgo.operators.migration package": [[7, "pygenalgo-operators-migration-package"]], "pygenalgo.operators.migration.clockwise_migration module": [[7, "module-pygenalgo.operators.migration.clockwise_migration"]], "pygenalgo.operators.migration.meta_migration module": [[7, "module-pygenalgo.operators.migration.meta_migration"]], "pygenalgo.operators.migration.migration_operator module": [[7, "module-pygenalgo.operators.migration.migration_operator"]], "pygenalgo.operators.migration.random_migration module": [[7, "module-pygenalgo.operators.migration.random_migration"]], "pygenalgo.operators.mutation package": [[8, "pygenalgo-operators-mutation-package"]], "pygenalgo.operators.mutation.flip_mutator module": [[8, "module-pygenalgo.operators.mutation.flip_mutator"]], "pygenalgo.operators.mutation.gaussian_mutator module": [[8, "module-pygenalgo.operators.mutation.gaussian_mutator"]], "pygenalgo.operators.mutation.inverse_mutator module": [[8, "module-pygenalgo.operators.mutation.inverse_mutator"]], "pygenalgo.operators.mutation.meta_mutator module": [[8, "module-pygenalgo.operators.mutation.meta_mutator"]], "pygenalgo.operators.mutation.mutate_operator module": [[8, "module-pygenalgo.operators.mutation.mutate_operator"]], "pygenalgo.operators.mutation.random_mutator module": [[8, "module-pygenalgo.operators.mutation.random_mutator"]], "pygenalgo.operators.mutation.shuffle_mutator module": [[8, "module-pygenalgo.operators.mutation.shuffle_mutator"]], "pygenalgo.operators.mutation.swap_mutator module": [[8, "module-pygenalgo.operators.mutation.swap_mutator"]], "pygenalgo.operators.selection package": [[9, "pygenalgo-operators-selection-package"]], "pygenalgo.operators.selection.boltzmann_selector module": [[9, "module-pygenalgo.operators.selection.boltzmann_selector"]], "pygenalgo.operators.selection.linear_rank_selector module": [[9, "module-pygenalgo.operators.selection.linear_rank_selector"]], "pygenalgo.operators.selection.random_selector module": [[9, "module-pygenalgo.operators.selection.random_selector"]], "pygenalgo.operators.selection.roulette_wheel_selector module": [[9, "module-pygenalgo.operators.selection.roulette_wheel_selector"]], "pygenalgo.operators.selection.select_operator module": [[9, "module-pygenalgo.operators.selection.select_operator"]], "pygenalgo.operators.selection.stochastic_universal_selector module": [[9, "module-pygenalgo.operators.selection.stochastic_universal_selector"]], "pygenalgo.operators.selection.tournament_selector module": [[9, "module-pygenalgo.operators.selection.tournament_selector"]], "pygenalgo.operators.selection.truncation_selector module": [[9, "module-pygenalgo.operators.selection.truncation_selector"]]}, "docnames": ["index", "modules", "pygenalgo", "pygenalgo.engines", "pygenalgo.genome", "pygenalgo.operators", "pygenalgo.operators.crossover", "pygenalgo.operators.migration", "pygenalgo.operators.mutation", "pygenalgo.operators.selection"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["index.rst", "modules.rst", "pygenalgo.rst", "pygenalgo.engines.rst", "pygenalgo.genome.rst", "pygenalgo.operators.rst", "pygenalgo.operators.crossover.rst", "pygenalgo.operators.migration.rst", "pygenalgo.operators.mutation.rst", "pygenalgo.operators.selection.rst"], "indexentries": {"adapt_probabilities() (pygenalgo.engines.generic_ga.genericga method)": [[3, "pygenalgo.engines.generic_ga.GenericGA.adapt_probabilities", false]], "all_counters (pygenalgo.operators.crossover.meta_crossover.metacrossover property)": [[6, "pygenalgo.operators.crossover.meta_crossover.MetaCrossover.all_counters", false]], "all_counters (pygenalgo.operators.migration.meta_migration.metamigration property)": [[7, "pygenalgo.operators.migration.meta_migration.MetaMigration.all_counters", false]], "all_counters (pygenalgo.operators.mutation.meta_mutator.metamutator property)": [[8, "pygenalgo.operators.mutation.meta_mutator.MetaMutator.all_counters", false]], "apply_corrections() (in module pygenalgo.engines.auxiliary)": [[3, "pygenalgo.engines.auxiliary.apply_corrections", false]], "average_hamming_distance() (in module pygenalgo.engines.auxiliary)": [[3, "pygenalgo.engines.auxiliary.average_hamming_distance", false]], "best_chromosome() (pygenalgo.engines.generic_ga.genericga method)": [[3, "pygenalgo.engines.generic_ga.GenericGA.best_chromosome", false]], "best_n() (pygenalgo.engines.generic_ga.genericga method)": [[3, "pygenalgo.engines.generic_ga.GenericGA.best_n", false]], "boltzmannselector (class in pygenalgo.operators.selection.boltzmann_selector)": [[9, "pygenalgo.operators.selection.boltzmann_selector.BoltzmannSelector", false]], "chromosome (class in pygenalgo.genome.chromosome)": [[4, "pygenalgo.genome.chromosome.Chromosome", false]], "clockwisemigration (class in pygenalgo.operators.migration.clockwise_migration)": [[7, "pygenalgo.operators.migration.clockwise_migration.ClockwiseMigration", false]], "clone() (pygenalgo.genome.chromosome.chromosome method)": [[4, "pygenalgo.genome.chromosome.Chromosome.clone", false]], "clone() (pygenalgo.genome.gene.gene method)": [[4, "pygenalgo.genome.gene.Gene.clone", false]], "counter (pygenalgo.operators.genetic_operator.geneticoperator property)": [[5, "pygenalgo.operators.genetic_operator.GeneticOperator.counter", false]], "crossover() (pygenalgo.operators.crossover.crossover_operator.crossoveroperator method)": [[6, "pygenalgo.operators.crossover.crossover_operator.CrossoverOperator.crossover", false]], "crossover() (pygenalgo.operators.crossover.meta_crossover.metacrossover method)": [[6, "pygenalgo.operators.crossover.meta_crossover.MetaCrossover.crossover", false]], "crossover() (pygenalgo.operators.crossover.mutli_point_crossover.multipointcrossover method)": [[6, "pygenalgo.operators.crossover.mutli_point_crossover.MultiPointCrossover.crossover", false]], "crossover() (pygenalgo.operators.crossover.order_crossover.ordercrossover method)": [[6, "pygenalgo.operators.crossover.order_crossover.OrderCrossover.crossover", false]], "crossover() (pygenalgo.operators.crossover.partially_mapped_crossover.partiallymappedcrossover method)": [[6, "pygenalgo.operators.crossover.partially_mapped_crossover.PartiallyMappedCrossover.crossover", false]], "crossover() (pygenalgo.operators.crossover.position_based_crossover.positionbasedcrossover method)": [[6, "pygenalgo.operators.crossover.position_based_crossover.PositionBasedCrossover.crossover", false]], "crossover() (pygenalgo.operators.crossover.single_point_crossover.singlepointcrossover method)": [[6, "pygenalgo.operators.crossover.single_point_crossover.SinglePointCrossover.crossover", false]], "crossover() (pygenalgo.operators.crossover.uniform_crossover.uniformcrossover method)": [[6, "pygenalgo.operators.crossover.uniform_crossover.UniformCrossover.crossover", false]], "crossover_mutate() (pygenalgo.engines.generic_ga.genericga method)": [[3, "pygenalgo.engines.generic_ga.GenericGA.crossover_mutate", false]], "crossover_op (pygenalgo.engines.generic_ga.genericga property)": [[3, "pygenalgo.engines.generic_ga.GenericGA.crossover_op", false]], "crossoveroperator (class in pygenalgo.operators.crossover.crossover_operator)": [[6, "pygenalgo.operators.crossover.crossover_operator.CrossoverOperator", false]], "evaluate_fitness() (pygenalgo.engines.generic_ga.genericga method)": [[3, "pygenalgo.engines.generic_ga.GenericGA.evaluate_fitness", false]], "fitness (pygenalgo.genome.chromosome.chromosome property)": [[4, "pygenalgo.genome.chromosome.Chromosome.fitness", false]], "fitness_func (pygenalgo.engines.generic_ga.genericga attribute)": [[3, "pygenalgo.engines.generic_ga.GenericGA.fitness_func", false]], "fitness_func (pygenalgo.engines.standard_ga.standardga attribute)": [[3, "pygenalgo.engines.standard_ga.StandardGA.fitness_func", false]], "flip() (pygenalgo.genome.gene.gene method)": [[4, "pygenalgo.genome.gene.Gene.flip", false]], "flipmutator (class in pygenalgo.operators.mutation.flip_mutator)": [[8, "pygenalgo.operators.mutation.flip_mutator.FlipMutator", false]], "gaussian() (pygenalgo.genome.gene.gene method)": [[4, "pygenalgo.genome.gene.Gene.gaussian", false]], "gaussianmutator (class in pygenalgo.operators.mutation.gaussian_mutator)": [[8, "pygenalgo.operators.mutation.gaussian_mutator.GaussianMutator", false]], "gene (class in pygenalgo.genome.gene)": [[4, "pygenalgo.genome.gene.Gene", false]], "genericga (class in pygenalgo.engines.generic_ga)": [[3, "pygenalgo.engines.generic_ga.GenericGA", false]], "geneticoperator (class in pygenalgo.operators.genetic_operator)": [[5, "pygenalgo.operators.genetic_operator.GeneticOperator", false]], "genome (pygenalgo.genome.chromosome.chromosome property)": [[4, "pygenalgo.genome.chromosome.Chromosome.genome", false]], "hamming_distance() (in module pygenalgo.engines.auxiliary)": [[3, "pygenalgo.engines.auxiliary.hamming_distance", false]], "id (pygenalgo.engines.auxiliary.subpopulation property)": [[3, "pygenalgo.engines.auxiliary.SubPopulation.id", false]], "inc_counter() (pygenalgo.operators.genetic_operator.geneticoperator method)": [[5, "pygenalgo.operators.genetic_operator.GeneticOperator.inc_counter", false]], "increase_counter() (in module pygenalgo.operators.genetic_operator)": [[5, "pygenalgo.operators.genetic_operator.increase_counter", false]], "individual_fitness() (pygenalgo.engines.generic_ga.genericga method)": [[3, "pygenalgo.engines.generic_ga.GenericGA.individual_fitness", false]], "inversemutator (class in pygenalgo.operators.mutation.inverse_mutator)": [[8, "pygenalgo.operators.mutation.inverse_mutator.InverseMutator", false]], "is_genome_valid() (pygenalgo.genome.chromosome.chromosome method)": [[4, "pygenalgo.genome.chromosome.Chromosome.is_genome_valid", false]], "is_operator_applicable() (pygenalgo.operators.genetic_operator.geneticoperator method)": [[5, "pygenalgo.operators.genetic_operator.GeneticOperator.is_operator_applicable", false]], "is_valid (pygenalgo.genome.gene.gene property)": [[4, "pygenalgo.genome.gene.Gene.is_valid", false]], "islandmodelga (class in pygenalgo.engines.island_model_ga)": [[3, "pygenalgo.engines.island_model_ga.IslandModelGA", false]], "items (pygenalgo.operators.genetic_operator.geneticoperator property)": [[5, "pygenalgo.operators.genetic_operator.GeneticOperator.items", false]], "iter (pygenalgo.operators.genetic_operator.geneticoperator property)": [[5, "pygenalgo.operators.genetic_operator.GeneticOperator.iter", false]], "linearrankselector (class in pygenalgo.operators.selection.linear_rank_selector)": [[9, "pygenalgo.operators.selection.linear_rank_selector.LinearRankSelector", false]], "max_cpus (pygenalgo.engines.generic_ga.genericga attribute)": [[3, "pygenalgo.engines.generic_ga.GenericGA.MAX_CPUs", false]], "metacrossover (class in pygenalgo.operators.crossover.meta_crossover)": [[6, "pygenalgo.operators.crossover.meta_crossover.MetaCrossover", false]], "metamigration (class in pygenalgo.operators.migration.meta_migration)": [[7, "pygenalgo.operators.migration.meta_migration.MetaMigration", false]], "metamutator (class in pygenalgo.operators.mutation.meta_mutator)": [[8, "pygenalgo.operators.mutation.meta_mutator.MetaMutator", false]], "migrate() (pygenalgo.operators.migration.clockwise_migration.clockwisemigration method)": [[7, "pygenalgo.operators.migration.clockwise_migration.ClockwiseMigration.migrate", false]], "migrate() (pygenalgo.operators.migration.meta_migration.metamigration method)": [[7, "pygenalgo.operators.migration.meta_migration.MetaMigration.migrate", false]], "migrate() (pygenalgo.operators.migration.migration_operator.migrationoperator method)": [[7, "pygenalgo.operators.migration.migration_operator.MigrationOperator.migrate", false]], "migrate() (pygenalgo.operators.migration.random_migration.randommigration method)": [[7, "pygenalgo.operators.migration.random_migration.RandomMigration.migrate", false]], "migrate_op (pygenalgo.engines.island_model_ga.islandmodelga property)": [[3, "pygenalgo.engines.island_model_ga.IslandModelGA.migrate_op", false]], "migrationoperator (class in pygenalgo.operators.migration.migration_operator)": [[7, "pygenalgo.operators.migration.migration_operator.MigrationOperator", false]], "module": [[2, "module-pygenalgo", false], [3, "module-pygenalgo.engines", false], [3, "module-pygenalgo.engines.auxiliary", false], [3, "module-pygenalgo.engines.generic_ga", false], [3, "module-pygenalgo.engines.island_model_ga", false], [3, "module-pygenalgo.engines.standard_ga", false], [4, "module-pygenalgo.genome", false], [4, "module-pygenalgo.genome.chromosome", false], [4, "module-pygenalgo.genome.gene", false], [5, "module-pygenalgo.operators", false], [5, "module-pygenalgo.operators.genetic_operator", false], [6, "module-pygenalgo.operators.crossover", false], [6, "module-pygenalgo.operators.crossover.crossover_operator", false], [6, "module-pygenalgo.operators.crossover.meta_crossover", false], [6, "module-pygenalgo.operators.crossover.mutli_point_crossover", false], [6, "module-pygenalgo.operators.crossover.order_crossover", false], [6, "module-pygenalgo.operators.crossover.partially_mapped_crossover", false], [6, "module-pygenalgo.operators.crossover.position_based_crossover", false], [6, "module-pygenalgo.operators.crossover.single_point_crossover", false], [6, "module-pygenalgo.operators.crossover.uniform_crossover", false], [7, "module-pygenalgo.operators.migration", false], [7, "module-pygenalgo.operators.migration.clockwise_migration", false], [7, "module-pygenalgo.operators.migration.meta_migration", false], [7, "module-pygenalgo.operators.migration.migration_operator", false], [7, "module-pygenalgo.operators.migration.random_migration", false], [8, "module-pygenalgo.operators.mutation", false], [8, "module-pygenalgo.operators.mutation.flip_mutator", false], [8, "module-pygenalgo.operators.mutation.gaussian_mutator", false], [8, "module-pygenalgo.operators.mutation.inverse_mutator", false], [8, "module-pygenalgo.operators.mutation.meta_mutator", false], [8, "module-pygenalgo.operators.mutation.mutate_operator", false], [8, "module-pygenalgo.operators.mutation.random_mutator", false], [8, "module-pygenalgo.operators.mutation.shuffle_mutator", false], [8, "module-pygenalgo.operators.mutation.swap_mutator", false], [9, "module-pygenalgo.operators.selection", false], [9, "module-pygenalgo.operators.selection.boltzmann_selector", false], [9, "module-pygenalgo.operators.selection.linear_rank_selector", false], [9, "module-pygenalgo.operators.selection.random_selector", false], [9, "module-pygenalgo.operators.selection.roulette_wheel_selector", false], [9, "module-pygenalgo.operators.selection.select_operator", false], [9, "module-pygenalgo.operators.selection.stochastic_universal_selector", false], [9, "module-pygenalgo.operators.selection.tournament_selector", false], [9, "module-pygenalgo.operators.selection.truncation_selector", false]], "multipointcrossover (class in pygenalgo.operators.crossover.mutli_point_crossover)": [[6, "pygenalgo.operators.crossover.mutli_point_crossover.MultiPointCrossover", false]], "mutate() (pygenalgo.operators.mutation.flip_mutator.flipmutator method)": [[8, "pygenalgo.operators.mutation.flip_mutator.FlipMutator.mutate", false]], "mutate() (pygenalgo.operators.mutation.gaussian_mutator.gaussianmutator method)": [[8, "pygenalgo.operators.mutation.gaussian_mutator.GaussianMutator.mutate", false]], "mutate() (pygenalgo.operators.mutation.inverse_mutator.inversemutator method)": [[8, "pygenalgo.operators.mutation.inverse_mutator.InverseMutator.mutate", false]], "mutate() (pygenalgo.operators.mutation.meta_mutator.metamutator method)": [[8, "pygenalgo.operators.mutation.meta_mutator.MetaMutator.mutate", false]], "mutate() (pygenalgo.operators.mutation.mutate_operator.mutationoperator method)": [[8, "pygenalgo.operators.mutation.mutate_operator.MutationOperator.mutate", false]], "mutate() (pygenalgo.operators.mutation.random_mutator.randommutator method)": [[8, "pygenalgo.operators.mutation.random_mutator.RandomMutator.mutate", false]], "mutate() (pygenalgo.operators.mutation.shuffle_mutator.shufflemutator method)": [[8, "pygenalgo.operators.mutation.shuffle_mutator.ShuffleMutator.mutate", false]], "mutate() (pygenalgo.operators.mutation.swap_mutator.swapmutator method)": [[8, "pygenalgo.operators.mutation.swap_mutator.SwapMutator.mutate", false]], "mutate_op (pygenalgo.engines.generic_ga.genericga property)": [[3, "pygenalgo.engines.generic_ga.GenericGA.mutate_op", false]], "mutationoperator (class in pygenalgo.operators.mutation.mutate_operator)": [[8, "pygenalgo.operators.mutation.mutate_operator.MutationOperator", false]], "n_cpus (pygenalgo.engines.generic_ga.genericga property)": [[3, "pygenalgo.engines.generic_ga.GenericGA.n_cpus", false]], "num_islands (pygenalgo.engines.island_model_ga.islandmodelga attribute)": [[3, "pygenalgo.engines.island_model_ga.IslandModelGA.num_islands", false]], "ordercrossover (class in pygenalgo.operators.crossover.order_crossover)": [[6, "pygenalgo.operators.crossover.order_crossover.OrderCrossover", false]], "partiallymappedcrossover (class in pygenalgo.operators.crossover.partially_mapped_crossover)": [[6, "pygenalgo.operators.crossover.partially_mapped_crossover.PartiallyMappedCrossover", false]], "pop_id (pygenalgo.engines.auxiliary.subpopulation attribute)": [[3, "pygenalgo.engines.auxiliary.SubPopulation.pop_id", false]], "population (pygenalgo.engines.auxiliary.subpopulation attribute)": [[3, "pygenalgo.engines.auxiliary.SubPopulation.population", false]], "population (pygenalgo.engines.generic_ga.genericga attribute)": [[3, "pygenalgo.engines.generic_ga.GenericGA.population", false]], "population (pygenalgo.engines.standard_ga.standardga attribute)": [[3, "pygenalgo.engines.standard_ga.StandardGA.population", false]], "population_fitness() (pygenalgo.engines.generic_ga.genericga method)": [[3, "pygenalgo.engines.generic_ga.GenericGA.population_fitness", false]], "positionbasedcrossover (class in pygenalgo.operators.crossover.position_based_crossover)": [[6, "pygenalgo.operators.crossover.position_based_crossover.PositionBasedCrossover", false]], "print_migration_stats() (pygenalgo.engines.island_model_ga.islandmodelga method)": [[3, "pygenalgo.engines.island_model_ga.IslandModelGA.print_migration_stats", false]], "print_operator_stats() (pygenalgo.engines.standard_ga.standardga method)": [[3, "pygenalgo.engines.standard_ga.StandardGA.print_operator_stats", false]], "probability (pygenalgo.operators.genetic_operator.geneticoperator property)": [[5, "pygenalgo.operators.genetic_operator.GeneticOperator.probability", false]], "pygenalgo": [[2, "module-pygenalgo", false]], "pygenalgo.engines": [[3, "module-pygenalgo.engines", false]], "pygenalgo.engines.auxiliary": [[3, "module-pygenalgo.engines.auxiliary", false]], "pygenalgo.engines.generic_ga": [[3, "module-pygenalgo.engines.generic_ga", false]], "pygenalgo.engines.island_model_ga": [[3, "module-pygenalgo.engines.island_model_ga", false]], "pygenalgo.engines.standard_ga": [[3, "module-pygenalgo.engines.standard_ga", false]], "pygenalgo.genome": [[4, "module-pygenalgo.genome", false]], "pygenalgo.genome.chromosome": [[4, "module-pygenalgo.genome.chromosome", false]], "pygenalgo.genome.gene": [[4, "module-pygenalgo.genome.gene", false]], "pygenalgo.operators": [[5, "module-pygenalgo.operators", false]], "pygenalgo.operators.crossover": [[6, "module-pygenalgo.operators.crossover", false]], "pygenalgo.operators.crossover.crossover_operator": [[6, "module-pygenalgo.operators.crossover.crossover_operator", false]], "pygenalgo.operators.crossover.meta_crossover": [[6, "module-pygenalgo.operators.crossover.meta_crossover", false]], "pygenalgo.operators.crossover.mutli_point_crossover": [[6, "module-pygenalgo.operators.crossover.mutli_point_crossover", false]], "pygenalgo.operators.crossover.order_crossover": [[6, "module-pygenalgo.operators.crossover.order_crossover", false]], "pygenalgo.operators.crossover.partially_mapped_crossover": [[6, "module-pygenalgo.operators.crossover.partially_mapped_crossover", false]], "pygenalgo.operators.crossover.position_based_crossover": [[6, "module-pygenalgo.operators.crossover.position_based_crossover", false]], "pygenalgo.operators.crossover.single_point_crossover": [[6, "module-pygenalgo.operators.crossover.single_point_crossover", false]], "pygenalgo.operators.crossover.uniform_crossover": [[6, "module-pygenalgo.operators.crossover.uniform_crossover", false]], "pygenalgo.operators.genetic_operator": [[5, "module-pygenalgo.operators.genetic_operator", false]], "pygenalgo.operators.migration": [[7, "module-pygenalgo.operators.migration", false]], "pygenalgo.operators.migration.clockwise_migration": [[7, "module-pygenalgo.operators.migration.clockwise_migration", false]], "pygenalgo.operators.migration.meta_migration": [[7, "module-pygenalgo.operators.migration.meta_migration", false]], "pygenalgo.operators.migration.migration_operator": [[7, "module-pygenalgo.operators.migration.migration_operator", false]], "pygenalgo.operators.migration.random_migration": [[7, "module-pygenalgo.operators.migration.random_migration", false]], "pygenalgo.operators.mutation": [[8, "module-pygenalgo.operators.mutation", false]], "pygenalgo.operators.mutation.flip_mutator": [[8, "module-pygenalgo.operators.mutation.flip_mutator", false]], "pygenalgo.operators.mutation.gaussian_mutator": [[8, "module-pygenalgo.operators.mutation.gaussian_mutator", false]], "pygenalgo.operators.mutation.inverse_mutator": [[8, "module-pygenalgo.operators.mutation.inverse_mutator", false]], "pygenalgo.operators.mutation.meta_mutator": [[8, "module-pygenalgo.operators.mutation.meta_mutator", false]], "pygenalgo.operators.mutation.mutate_operator": [[8, "module-pygenalgo.operators.mutation.mutate_operator", false]], "pygenalgo.operators.mutation.random_mutator": [[8, "module-pygenalgo.operators.mutation.random_mutator", false]], "pygenalgo.operators.mutation.shuffle_mutator": [[8, "module-pygenalgo.operators.mutation.shuffle_mutator", false]], "pygenalgo.operators.mutation.swap_mutator": [[8, "module-pygenalgo.operators.mutation.swap_mutator", false]], "pygenalgo.operators.selection": [[9, "module-pygenalgo.operators.selection", false]], "pygenalgo.operators.selection.boltzmann_selector": [[9, "module-pygenalgo.operators.selection.boltzmann_selector", false]], "pygenalgo.operators.selection.linear_rank_selector": [[9, "module-pygenalgo.operators.selection.linear_rank_selector", false]], "pygenalgo.operators.selection.random_selector": [[9, "module-pygenalgo.operators.selection.random_selector", false]], "pygenalgo.operators.selection.roulette_wheel_selector": [[9, "module-pygenalgo.operators.selection.roulette_wheel_selector", false]], "pygenalgo.operators.selection.select_operator": [[9, "module-pygenalgo.operators.selection.select_operator", false]], "pygenalgo.operators.selection.stochastic_universal_selector": [[9, "module-pygenalgo.operators.selection.stochastic_universal_selector", false]], "pygenalgo.operators.selection.tournament_selector": [[9, "module-pygenalgo.operators.selection.tournament_selector", false]], "pygenalgo.operators.selection.truncation_selector": [[9, "module-pygenalgo.operators.selection.truncation_selector", false]], "random() (pygenalgo.genome.gene.gene method)": [[4, "pygenalgo.genome.gene.Gene.random", false]], "randommigration (class in pygenalgo.operators.migration.random_migration)": [[7, "pygenalgo.operators.migration.random_migration.RandomMigration", false]], "randommutator (class in pygenalgo.operators.mutation.random_mutator)": [[8, "pygenalgo.operators.mutation.random_mutator.RandomMutator", false]], "randomselector (class in pygenalgo.operators.selection.random_selector)": [[9, "pygenalgo.operators.selection.random_selector.RandomSelector", false]], "reset_counter() (pygenalgo.operators.crossover.meta_crossover.metacrossover method)": [[6, "pygenalgo.operators.crossover.meta_crossover.MetaCrossover.reset_counter", false]], "reset_counter() (pygenalgo.operators.genetic_operator.geneticoperator method)": [[5, "pygenalgo.operators.genetic_operator.GeneticOperator.reset_counter", false]], "reset_counter() (pygenalgo.operators.migration.meta_migration.metamigration method)": [[7, "pygenalgo.operators.migration.meta_migration.MetaMigration.reset_counter", false]], "reset_counter() (pygenalgo.operators.mutation.meta_mutator.metamutator method)": [[8, "pygenalgo.operators.mutation.meta_mutator.MetaMutator.reset_counter", false]], "rng (pygenalgo.operators.genetic_operator.geneticoperator property)": [[5, "pygenalgo.operators.genetic_operator.GeneticOperator.rng", false]], "rng_ga (pygenalgo.engines.generic_ga.genericga attribute)": [[3, "pygenalgo.engines.generic_ga.GenericGA.rng_GA", false]], "roulettewheelselector (class in pygenalgo.operators.selection.roulette_wheel_selector)": [[9, "pygenalgo.operators.selection.roulette_wheel_selector.RouletteWheelSelector", false]], "run() (pygenalgo.engines.generic_ga.genericga method)": [[3, "pygenalgo.engines.generic_ga.GenericGA.run", false]], "run() (pygenalgo.engines.island_model_ga.islandmodelga method)": [[3, "pygenalgo.engines.island_model_ga.IslandModelGA.run", false]], "run() (pygenalgo.engines.standard_ga.standardga method)": [[3, "pygenalgo.engines.standard_ga.StandardGA.run", false]], "select() (pygenalgo.operators.selection.boltzmann_selector.boltzmannselector method)": [[9, "pygenalgo.operators.selection.boltzmann_selector.BoltzmannSelector.select", false]], "select() (pygenalgo.operators.selection.linear_rank_selector.linearrankselector method)": [[9, "pygenalgo.operators.selection.linear_rank_selector.LinearRankSelector.select", false]], "select() (pygenalgo.operators.selection.random_selector.randomselector method)": [[9, "pygenalgo.operators.selection.random_selector.RandomSelector.select", false]], "select() (pygenalgo.operators.selection.roulette_wheel_selector.roulettewheelselector method)": [[9, "pygenalgo.operators.selection.roulette_wheel_selector.RouletteWheelSelector.select", false]], "select() (pygenalgo.operators.selection.select_operator.selectionoperator method)": [[9, "pygenalgo.operators.selection.select_operator.SelectionOperator.select", false]], "select() (pygenalgo.operators.selection.stochastic_universal_selector.stochasticuniversalselector method)": [[9, "pygenalgo.operators.selection.stochastic_universal_selector.StochasticUniversalSelector.select", false]], "select() (pygenalgo.operators.selection.tournament_selector.tournamentselector method)": [[9, "pygenalgo.operators.selection.tournament_selector.TournamentSelector.select", false]], "select() (pygenalgo.operators.selection.truncation_selector.truncationselector method)": [[9, "pygenalgo.operators.selection.truncation_selector.TruncationSelector.select", false]], "select_op (pygenalgo.engines.generic_ga.genericga property)": [[3, "pygenalgo.engines.generic_ga.GenericGA.select_op", false]], "selectionoperator (class in pygenalgo.operators.selection.select_operator)": [[9, "pygenalgo.operators.selection.select_operator.SelectionOperator", false]], "set_seed() (pygenalgo.engines.generic_ga.genericga class method)": [[3, "pygenalgo.engines.generic_ga.GenericGA.set_seed", false]], "set_seed() (pygenalgo.operators.genetic_operator.geneticoperator class method)": [[5, "pygenalgo.operators.genetic_operator.GeneticOperator.set_seed", false]], "shufflemutator (class in pygenalgo.operators.mutation.shuffle_mutator)": [[8, "pygenalgo.operators.mutation.shuffle_mutator.ShuffleMutator", false]], "singlepointcrossover (class in pygenalgo.operators.crossover.single_point_crossover)": [[6, "pygenalgo.operators.crossover.single_point_crossover.SinglePointCrossover", false]], "standardga (class in pygenalgo.engines.standard_ga)": [[3, "pygenalgo.engines.standard_ga.StandardGA", false]], "stats (pygenalgo.engines.generic_ga.genericga property)": [[3, "pygenalgo.engines.generic_ga.GenericGA.stats", false]], "stochasticuniversalselector (class in pygenalgo.operators.selection.stochastic_universal_selector)": [[9, "pygenalgo.operators.selection.stochastic_universal_selector.StochasticUniversalSelector", false]], "subpopulation (class in pygenalgo.engines.auxiliary)": [[3, "pygenalgo.engines.auxiliary.SubPopulation", false]], "swapmutator (class in pygenalgo.operators.mutation.swap_mutator)": [[8, "pygenalgo.operators.mutation.swap_mutator.SwapMutator", false]], "tournamentselector (class in pygenalgo.operators.selection.tournament_selector)": [[9, "pygenalgo.operators.selection.tournament_selector.TournamentSelector", false]], "truncationselector (class in pygenalgo.operators.selection.truncation_selector)": [[9, "pygenalgo.operators.selection.truncation_selector.TruncationSelector", false]], "uniformcrossover (class in pygenalgo.operators.crossover.uniform_crossover)": [[6, "pygenalgo.operators.crossover.uniform_crossover.UniformCrossover", false]], "update_stats() (pygenalgo.engines.standard_ga.standardga method)": [[3, "pygenalgo.engines.standard_ga.StandardGA.update_stats", false]], "valid (pygenalgo.genome.chromosome.chromosome property)": [[4, "pygenalgo.genome.chromosome.Chromosome.valid", false]], "value (pygenalgo.genome.gene.gene property)": [[4, "pygenalgo.genome.gene.Gene.value", false]], "values() (pygenalgo.genome.chromosome.chromosome method)": [[4, "pygenalgo.genome.chromosome.Chromosome.values", false]]}, "objects": {"": [[2, 0, 0, "-", "pygenalgo"]], "pygenalgo": [[3, 0, 0, "-", "engines"], [4, 0, 0, "-", "genome"], [5, 0, 0, "-", "operators"]], "pygenalgo.engines": [[3, 0, 0, "-", "auxiliary"], [3, 0, 0, "-", "generic_ga"], [3, 0, 0, "-", "island_model_ga"], [3, 0, 0, "-", "standard_ga"]], "pygenalgo.engines.auxiliary": [[3, 1, 1, "", "SubPopulation"], [3, 4, 1, "", "apply_corrections"], [3, 4, 1, "", "average_hamming_distance"], [3, 4, 1, "", "hamming_distance"]], "pygenalgo.engines.auxiliary.SubPopulation": [[3, 2, 1, "", "id"], [3, 3, 1, "", "pop_id"], [3, 3, 1, "", "population"]], "pygenalgo.engines.generic_ga": [[3, 1, 1, "", "GenericGA"]], "pygenalgo.engines.generic_ga.GenericGA": [[3, 3, 1, "", "MAX_CPUs"], [3, 5, 1, "", "adapt_probabilities"], [3, 5, 1, "", "best_chromosome"], [3, 5, 1, "", "best_n"], [3, 5, 1, "", "crossover_mutate"], [3, 2, 1, "", "crossover_op"], [3, 5, 1, "", "evaluate_fitness"], [3, 3, 1, "", "fitness_func"], [3, 5, 1, "", "individual_fitness"], [3, 2, 1, "", "mutate_op"], [3, 2, 1, "", "n_cpus"], [3, 3, 1, "", "population"], [3, 5, 1, "", "population_fitness"], [3, 3, 1, "", "rng_GA"], [3, 5, 1, "", "run"], [3, 2, 1, "", "select_op"], [3, 5, 1, "", "set_seed"], [3, 2, 1, "", "stats"]], "pygenalgo.engines.island_model_ga": [[3, 1, 1, "", "IslandModelGA"]], "pygenalgo.engines.island_model_ga.IslandModelGA": [[3, 2, 1, "", "migrate_op"], [3, 3, 1, "", "num_islands"], [3, 5, 1, "", "print_migration_stats"], [3, 5, 1, "", "run"]], "pygenalgo.engines.standard_ga": [[3, 1, 1, "", "StandardGA"]], "pygenalgo.engines.standard_ga.StandardGA": [[3, 3, 1, "", "fitness_func"], [3, 3, 1, "", "population"], [3, 5, 1, "", "print_operator_stats"], [3, 5, 1, "", "run"], [3, 5, 1, "", "update_stats"]], "pygenalgo.genome": [[4, 0, 0, "-", "chromosome"], [4, 0, 0, "-", "gene"]], "pygenalgo.genome.chromosome": [[4, 1, 1, "", "Chromosome"]], "pygenalgo.genome.chromosome.Chromosome": [[4, 5, 1, "", "clone"], [4, 2, 1, "", "fitness"], [4, 2, 1, "", "genome"], [4, 5, 1, "", "is_genome_valid"], [4, 2, 1, "", "valid"], [4, 5, 1, "", "values"]], "pygenalgo.genome.gene": [[4, 1, 1, "", "Gene"]], "pygenalgo.genome.gene.Gene": [[4, 5, 1, "", "clone"], [4, 5, 1, "", "flip"], [4, 5, 1, "", "gaussian"], [4, 2, 1, "", "is_valid"], [4, 5, 1, "", "random"], [4, 2, 1, "", "value"]], "pygenalgo.operators": [[6, 0, 0, "-", "crossover"], [5, 0, 0, "-", "genetic_operator"], [7, 0, 0, "-", "migration"], [8, 0, 0, "-", "mutation"], [9, 0, 0, "-", "selection"]], "pygenalgo.operators.crossover": [[6, 0, 0, "-", "crossover_operator"], [6, 0, 0, "-", "meta_crossover"], [6, 0, 0, "-", "mutli_point_crossover"], [6, 0, 0, "-", "order_crossover"], [6, 0, 0, "-", "partially_mapped_crossover"], [6, 0, 0, "-", "position_based_crossover"], [6, 0, 0, "-", "single_point_crossover"], [6, 0, 0, "-", "uniform_crossover"]], "pygenalgo.operators.crossover.crossover_operator": [[6, 1, 1, "", "CrossoverOperator"]], "pygenalgo.operators.crossover.crossover_operator.CrossoverOperator": [[6, 5, 1, "", "crossover"]], "pygenalgo.operators.crossover.meta_crossover": [[6, 1, 1, "", "MetaCrossover"]], "pygenalgo.operators.crossover.meta_crossover.MetaCrossover": [[6, 2, 1, "", "all_counters"], [6, 5, 1, "", "crossover"], [6, 5, 1, "", "reset_counter"]], "pygenalgo.operators.crossover.mutli_point_crossover": [[6, 1, 1, "", "MultiPointCrossover"]], "pygenalgo.operators.crossover.mutli_point_crossover.MultiPointCrossover": [[6, 5, 1, "", "crossover"]], "pygenalgo.operators.crossover.order_crossover": [[6, 1, 1, "", "OrderCrossover"]], "pygenalgo.operators.crossover.order_crossover.OrderCrossover": [[6, 5, 1, "", "crossover"]], "pygenalgo.operators.crossover.partially_mapped_crossover": [[6, 1, 1, "", "PartiallyMappedCrossover"]], "pygenalgo.operators.crossover.partially_mapped_crossover.PartiallyMappedCrossover": [[6, 5, 1, "", "crossover"]], "pygenalgo.operators.crossover.position_based_crossover": [[6, 1, 1, "", "PositionBasedCrossover"]], "pygenalgo.operators.crossover.position_based_crossover.PositionBasedCrossover": [[6, 5, 1, "", "crossover"]], "pygenalgo.operators.crossover.single_point_crossover": [[6, 1, 1, "", "SinglePointCrossover"]], "pygenalgo.operators.crossover.single_point_crossover.SinglePointCrossover": [[6, 5, 1, "", "crossover"]], "pygenalgo.operators.crossover.uniform_crossover": [[6, 1, 1, "", "UniformCrossover"]], "pygenalgo.operators.crossover.uniform_crossover.UniformCrossover": [[6, 5, 1, "", "crossover"]], "pygenalgo.operators.genetic_operator": [[5, 1, 1, "", "GeneticOperator"], [5, 4, 1, "", "increase_counter"]], "pygenalgo.operators.genetic_operator.GeneticOperator": [[5, 2, 1, "", "counter"], [5, 5, 1, "", "inc_counter"], [5, 5, 1, "", "is_operator_applicable"], [5, 2, 1, "", "items"], [5, 2, 1, "", "iter"], [5, 2, 1, "", "probability"], [5, 5, 1, "", "reset_counter"], [5, 2, 1, "", "rng"], [5, 5, 1, "", "set_seed"]], "pygenalgo.operators.migration": [[7, 0, 0, "-", "clockwise_migration"], [7, 0, 0, "-", "meta_migration"], [7, 0, 0, "-", "migration_operator"], [7, 0, 0, "-", "random_migration"]], "pygenalgo.operators.migration.clockwise_migration": [[7, 1, 1, "", "ClockwiseMigration"]], "pygenalgo.operators.migration.clockwise_migration.ClockwiseMigration": [[7, 5, 1, "", "migrate"]], "pygenalgo.operators.migration.meta_migration": [[7, 1, 1, "", "MetaMigration"]], "pygenalgo.operators.migration.meta_migration.MetaMigration": [[7, 2, 1, "", "all_counters"], [7, 5, 1, "", "migrate"], [7, 5, 1, "", "reset_counter"]], "pygenalgo.operators.migration.migration_operator": [[7, 1, 1, "", "MigrationOperator"]], "pygenalgo.operators.migration.migration_operator.MigrationOperator": [[7, 5, 1, "", "migrate"]], "pygenalgo.operators.migration.random_migration": [[7, 1, 1, "", "RandomMigration"]], "pygenalgo.operators.migration.random_migration.RandomMigration": [[7, 5, 1, "", "migrate"]], "pygenalgo.operators.mutation": [[8, 0, 0, "-", "flip_mutator"], [8, 0, 0, "-", "gaussian_mutator"], [8, 0, 0, "-", "inverse_mutator"], [8, 0, 0, "-", "meta_mutator"], [8, 0, 0, "-", "mutate_operator"], [8, 0, 0, "-", "random_mutator"], [8, 0, 0, "-", "shuffle_mutator"], [8, 0, 0, "-", "swap_mutator"]], "pygenalgo.operators.mutation.flip_mutator": [[8, 1, 1, "", "FlipMutator"]], "pygenalgo.operators.mutation.flip_mutator.FlipMutator": [[8, 5, 1, "", "mutate"]], "pygenalgo.operators.mutation.gaussian_mutator": [[8, 1, 1, "", "GaussianMutator"]], "pygenalgo.operators.mutation.gaussian_mutator.GaussianMutator": [[8, 5, 1, "", "mutate"]], "pygenalgo.operators.mutation.inverse_mutator": [[8, 1, 1, "", "InverseMutator"]], "pygenalgo.operators.mutation.inverse_mutator.InverseMutator": [[8, 5, 1, "", "mutate"]], "pygenalgo.operators.mutation.meta_mutator": [[8, 1, 1, "", "MetaMutator"]], "pygenalgo.operators.mutation.meta_mutator.MetaMutator": [[8, 2, 1, "", "all_counters"], [8, 5, 1, "", "mutate"], [8, 5, 1, "", "reset_counter"]], "pygenalgo.operators.mutation.mutate_operator": [[8, 1, 1, "", "MutationOperator"]], "pygenalgo.operators.mutation.mutate_operator.MutationOperator": [[8, 5, 1, "", "mutate"]], "pygenalgo.operators.mutation.random_mutator": [[8, 1, 1, "", "RandomMutator"]], "pygenalgo.operators.mutation.random_mutator.RandomMutator": [[8, 5, 1, "", "mutate"]], "pygenalgo.operators.mutation.shuffle_mutator": [[8, 1, 1, "", "ShuffleMutator"]], "pygenalgo.operators.mutation.shuffle_mutator.ShuffleMutator": [[8, 5, 1, "", "mutate"]], "pygenalgo.operators.mutation.swap_mutator": [[8, 1, 1, "", "SwapMutator"]], "pygenalgo.operators.mutation.swap_mutator.SwapMutator": [[8, 5, 1, "", "mutate"]], "pygenalgo.operators.selection": [[9, 0, 0, "-", "boltzmann_selector"], [9, 0, 0, "-", "linear_rank_selector"], [9, 0, 0, "-", "random_selector"], [9, 0, 0, "-", "roulette_wheel_selector"], [9, 0, 0, "-", "select_operator"], [9, 0, 0, "-", "stochastic_universal_selector"], [9, 0, 0, "-", "tournament_selector"], [9, 0, 0, "-", "truncation_selector"]], "pygenalgo.operators.selection.boltzmann_selector": [[9, 1, 1, "", "BoltzmannSelector"]], "pygenalgo.operators.selection.boltzmann_selector.BoltzmannSelector": [[9, 5, 1, "", "select"]], "pygenalgo.operators.selection.linear_rank_selector": [[9, 1, 1, "", "LinearRankSelector"]], "pygenalgo.operators.selection.linear_rank_selector.LinearRankSelector": [[9, 5, 1, "", "select"]], "pygenalgo.operators.selection.random_selector": [[9, 1, 1, "", "RandomSelector"]], "pygenalgo.operators.selection.random_selector.RandomSelector": [[9, 5, 1, "", "select"]], "pygenalgo.operators.selection.roulette_wheel_selector": [[9, 1, 1, "", "RouletteWheelSelector"]], "pygenalgo.operators.selection.roulette_wheel_selector.RouletteWheelSelector": [[9, 5, 1, "", "select"]], "pygenalgo.operators.selection.select_operator": [[9, 1, 1, "", "SelectionOperator"]], "pygenalgo.operators.selection.select_operator.SelectionOperator": [[9, 5, 1, "", "select"]], "pygenalgo.operators.selection.stochastic_universal_selector": [[9, 1, 1, "", "StochasticUniversalSelector"]], "pygenalgo.operators.selection.stochastic_universal_selector.StochasticUniversalSelector": [[9, 5, 1, "", "select"]], "pygenalgo.operators.selection.tournament_selector": [[9, 1, 1, "", "TournamentSelector"]], "pygenalgo.operators.selection.tournament_selector.TournamentSelector": [[9, 5, 1, "", "select"]], "pygenalgo.operators.selection.truncation_selector": [[9, 1, 1, "", "TruncationSelector"]], "pygenalgo.operators.selection.truncation_selector.TruncationSelector": [[9, 5, 1, "", "select"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:attribute", "4": "py:function", "5": "py:method"}, "terms": {"": [3, 4, 5, 9], "0": [4, 5, 6, 7, 8, 9], "0x10dd18040": 3, "0x1175eb300": [], "1": [3, 4, 5, 8, 9], "10": [0, 3], "100": [3, 9], "1000": 3, "2": 6, "3": [0, 9], "30": 9, "5": 9, "8": 3, "9": 6, "95": 7, "A": 3, "If": [3, 5], "In": [3, 4, 7, 8], "It": [3, 4, 6, 9], "The": [3, 4, 9], "_fit": 4, "_genom": 4, "_item": [5, 6], "_probabl": 5, "_rng": 5, "_valid": 4, "about": 3, "abstract": [6, 7, 8, 9], "accept": 9, "access": 5, "accessor": [3, 4, 5, 6, 7, 8], "accord": [3, 9], "activ": 3, "ad": 8, "adapt": 3, "adapt_prob": [2, 3], "add": [4, 8], "addit": 4, "adjust": 3, "after": [3, 5, 9], "algorithm": [0, 3], "all": [3, 4, 5, 6, 7, 8, 9], "all_count": [5, 6, 7, 8], "allow": 3, "allow_migr": 3, "along": 5, "also": 4, "alwai": 3, "amend": [7, 8], "among": 3, "an": [3, 6, 7, 8, 9], "ani": [4, 5], "anoth": 8, "appli": [3, 5, 6, 7, 8, 9], "applic": [3, 5, 6, 7, 8], "apply_correct": [2, 3], "ar": [3, 4, 9], "arg": [3, 9], "assign": 9, "assum": [3, 9], "attempt": 3, "auxiliari": [1, 2], "averag": 3, "average_hamming_dist": [2, 3], "backend": 3, "base": [3, 4, 5, 6, 7, 8, 9], "basic": [3, 7], "becaus": [6, 7, 8], "been": [3, 8], "befor": 3, "best": [3, 7, 9], "best_chromosom": [2, 3], "best_n": [2, 3], "better": 3, "between": [3, 7, 8], "bia": 9, "bit": 4, "boltzmann": 9, "boltzmann_selector": [2, 5], "boltzmannselector": [5, 9], "bool": [3, 4, 5], "both": 6, "break": [3, 4], "breed": 3, "call": [3, 4, 5, 6, 7, 8, 9], "callabl": [3, 4], "can": [0, 3, 4, 5, 7, 8], "chanc": 9, "chang": 5, "check": [3, 4, 5], "child1": 6, "child2": 6, "children": 6, "choos": 9, "chosen": [6, 9], "chromosom": [1, 2, 3, 6, 7, 8, 9], "class": [0, 3, 4, 5, 6, 7, 8, 9], "classmethod": [3, 5], "clockwis": 7, "clockwise_migr": [2, 5], "clockwisemigr": [5, 7], "clone": [2, 4], "com": 0, "combin": 3, "combinatori": 6, "common": [3, 5], "compar": [3, 6, 9], "comput": 3, "concept": 4, "condit": 5, "consecut": 3, "constrain": 0, "constraint": 4, "contain": [3, 5], "content": 1, "converg": 3, "copi": [3, 4], "correct": 3, "correspond": 3, "counter": [2, 5, 6, 7, 8], "cpu": 3, "creat": [4, 6, 7, 8, 9], "cross": 6, "crossov": [2, 3, 5, 9], "crossover_mut": [2, 3], "crossover_op": [2, 3], "crossover_oper": [2, 5], "crossover_prob": 6, "crossoveroper": [3, 5, 6], "crossx_op": 3, "current": [3, 4, 8], "custom": 3, "cut": 6, "data": 4, "dataclass": 4, "datum": 4, "decor": 5, "decreas": 3, "deep": 4, "default": [3, 5], "defin": [3, 9], "depend": [0, 9], "deriv": 5, "describ": 4, "descript": [3, 4, 5, 6, 7, 8, 9], "determin": 3, "deviat": 4, "dict": [3, 6, 7, 8], "dictionari": [3, 6, 7, 8], "differ": [3, 4], "directli": [3, 9], "displai": 3, "dissimilar": 3, "distanc": 3, "distribut": [4, 9], "divid": 3, "doe": 9, "doubl": 4, "drawn": 4, "duplic": 4, "dure": 4, "dy": 4, "e": 9, "each": [3, 4, 5, 7, 9], "effect": 9, "elit": 3, "els": 4, "enabl": 3, "encapsul": 4, "encod": 4, "end": 8, "engin": [1, 2], "ensur": 6, "entiti": 4, "entri": 4, "epoch": 3, "equal": [6, 7, 8], "error": [6, 7, 8, 9], "evalu": 3, "evaluate_fit": [2, 3], "even": 9, "evenli": 9, "everi": 6, "everyth": [6, 7, 8], "evolut": [3, 4], "evolutionari": 3, "evolv": 3, "exhibit": 9, "expect": [6, 7, 8], "explicitli": [6, 7, 8], "extens": 9, "f_tol": 3, "factori": [3, 4], "fals": [3, 4], "fast": 6, "faster": 6, "favour": 9, "first": 9, "fit": [2, 3, 4, 9], "fit_func": 3, "fit_list": 3, "fitness_func": [2, 3], "flag": 3, "flaw": 3, "flexibl": 4, "flip": [2, 4, 8], "flip_mut": [2, 5], "flipmut": [4, 5, 8], "float": [3, 4, 5, 6, 7, 8, 9], "follow": 7, "form": 9, "found": 3, "framework": 3, "free": 0, "from": [3, 4, 5, 6, 7, 8, 9], "fulli": 0, "func": 4, "function": [3, 4, 5], "futur": [7, 8], "g": 9, "ga": 3, "gaussian": [2, 4, 8], "gaussian_mut": [2, 5], "gaussianmut": [4, 5, 8], "gene": [1, 2, 3, 6, 8], "gener": [0, 3, 5, 8, 9], "generic_ga": [1, 2], "genericga": [2, 3], "genet": [0, 3, 5], "genetic_oper": [1, 2], "geneticoper": [2, 5, 6, 7, 8, 9], "genom": [1, 2, 3, 6], "get": [3, 5], "getter": [3, 4, 5, 6, 7, 8], "github": 0, "give": 9, "gnu": 0, "go": 3, "gpl": 0, "ha": 8, "ham": 3, "hamming_dist": [2, 3], "happen": 3, "have": [3, 4, 5, 6, 7, 8, 9], "held": 6, "here": [5, 6, 7, 8, 9], "higher": [3, 5, 9], "highest": [3, 9], "hold": [3, 4], "how": 4, "http": 0, "i": [0, 3, 4, 5, 6, 7, 8, 9], "id": [2, 3], "idea": 4, "ignor": 3, "imag": 4, "implement": [3, 4, 6, 7, 8, 9], "inc_count": [2, 5], "includ": 5, "increas": [3, 5], "increase_count": [2, 5], "index": [0, 3], "individu": [3, 4, 8, 9], "individual_fit": [2, 3], "inform": 3, "inherit": [5, 6, 7, 8, 9], "initial_pop": 3, "input": [3, 6], "input_popul": 3, "insid": 4, "int": [3, 5, 6, 9], "interfac": [3, 5, 6, 7, 8, 9], "intern": [6, 7, 8], "interv": 9, "invalid": [3, 6], "invers": 8, "inverse_mut": [2, 5], "inversemut": [5, 8], "invert": 8, "is_genome_valid": [2, 4], "is_operator_applic": [2, 5], "is_valid": [2, 4], "island": [3, 7], "island_model_ga": [1, 2], "islandmodelga": [2, 3], "isn": 6, "item": [2, 5], "item1": 3, "item2": 3, "iter": [2, 3, 5], "its": [3, 4, 5, 7, 8, 9], "itself": 4, "joblib": [0, 3], "k": 9, "kind": 4, "know": 4, "kwarg": [3, 9], "level": 3, "like": 9, "linear": 9, "linear_rank_selector": [2, 5], "linearrankselector": [5, 9], "list": [3, 4, 5, 7, 9], "locat": 6, "loci": 6, "locu": 6, "loki": 3, "main": [3, 4, 5], "make": 4, "map": 6, "max_cpu": [2, 3], "maximum": 3, "mean": 3, "measur": 3, "member": [3, 9], "meta": [6, 7, 8], "meta_crossov": [2, 5], "meta_migr": [2, 5], "meta_mut": [2, 5], "metacrossov": [5, 6], "metamigr": [5, 7], "metamut": [5, 8], "method": [3, 4, 5, 6, 7, 8, 9], "migrat": [2, 3, 5], "migrate_op": [2, 3], "migration_oper": [2, 5], "migration_prob": 7, "migrationoper": [3, 5, 7], "minim": 9, "mix": [6, 9], "model": 3, "modifi": 3, "modul": [0, 1], "moment": 9, "more": 9, "moreov": 3, "mostli": [4, 6, 7, 8], "movement": 7, "multipl": 6, "multipoint": 6, "multipointcrossov": [5, 6], "mutat": [2, 3, 4, 5, 9], "mutate_op": [2, 3], "mutate_oper": [2, 5], "mutate_prob": 8, "mutation_prob": 8, "mutationoper": [3, 5, 8], "mutli_point_crossov": [2, 5], "n": [3, 4, 9], "n_cpu": [2, 3], "n_period": 3, "nan": [3, 4], "nb": 3, "need": 3, "new": [3, 5, 8, 9], "new_se": [3, 5], "next": [3, 9], "none": [3, 4, 5, 6, 7, 8], "normal": 4, "note": [6, 7, 8, 9], "noth": [6, 7, 8, 9], "num_island": [2, 3], "num_loci": 6, "number": [3, 5, 6], "numpi": 0, "object": [0, 3, 4, 5, 9], "offspr": [6, 9], "old": 9, "one": [3, 4, 5, 6, 7, 8, 9], "onli": [3, 4, 5], "oper": [1, 2, 3, 4], "optim": [0, 4], "option": 3, "order": [6, 8], "order_crossov": [2, 5], "ordercrossov": [5, 6], "orient": 0, "origin": 6, "other": [6, 7, 8], "otherwis": 3, "output": 5, "overrid": [6, 7, 8], "own": [3, 4], "ox1": 6, "p": 9, "packag": [0, 1], "page": 0, "paradigm": 0, "parallel": 3, "parallel_mod": 3, "paramet": [3, 4, 5, 6, 7, 8, 9], "parameter": 4, "parent": [3, 6, 9], "parent1": 6, "parent2": 6, "partial": 6, "partially_mapped_crossov": [2, 5], "partiallymappedcrossov": [5, 6], "pcg64": 3, "percent": 9, "perform": [4, 6, 7, 8, 9], "period": 3, "place": 3, "pmx": 6, "po": 6, "point": 6, "polici": 7, "pop_id": [2, 3], "popul": [2, 3, 7, 9], "population_fit": [2, 3], "posit": [3, 6, 8], "position_based_crossov": [2, 5], "positionbasedcrossov": [5, 6], "practis": 3, "pre": 9, "predefin": [6, 9], "predominantli": 6, "print": 3, "print_migration_stat": [2, 3], "print_operator_stat": [2, 3], "probabilist": 5, "probabl": [2, 3, 5, 6, 7, 8, 9], "problem": [0, 4, 6], "process": [3, 4, 9], "produc": 6, "properti": [3, 4, 5, 6, 7, 8], "proport": 9, "proportion": 9, "provid": [0, 3, 4, 5, 6, 7, 8, 9], "purpos": 0, "pygeneticalgorithm": 0, "python": 0, "rais": [6, 7, 8, 9], "random": [2, 3, 4, 5, 7, 8, 9], "random_migr": [2, 5], "random_mut": [2, 5], "random_selector": [2, 5], "randomli": [6, 7, 8], "randommigr": [5, 7], "randommut": [5, 8], "randomselector": [5, 9], "rank": 9, "reach": 9, "reevalu": 3, "refer": [3, 4], "remind": [6, 7, 8, 9], "repeat": [6, 9], "repeatedli": 9, "replac": [3, 8], "repositori": 0, "repres": 4, "requir": 9, "research": 0, "reset_count": [2, 5, 6, 7, 8], "respons": 4, "rest": 9, "return": [3, 4, 5, 6, 7, 8, 9], "right": 7, "rng": [2, 5], "rng_ga": [2, 3], "rotat": 7, "roulett": 9, "roulette_wheel_selector": [2, 5], "roulettewheelselect": 9, "roulettewheelselector": [5, 9], "routin": 3, "rule": 4, "run": [2, 3], "rw": 9, "safeguard": 3, "same": 9, "sampl": 9, "search": 0, "seed": [3, 5], "select": [2, 3, 5, 6, 7, 8], "select_op": [2, 3], "select_oper": [2, 5], "select_prob": 9, "selection_prob": 9, "selectionoper": [3, 5, 9], "selector": 9, "self": 4, "set": [0, 3, 5, 6, 7, 8, 9], "set_se": [2, 3, 5], "sever": 9, "share": 3, "should": [3, 4, 5, 6, 7, 8, 9], "shuffl": [3, 8], "shuffle_mut": [2, 5], "shufflemut": [5, 8], "sigma": [4, 8], "similar": [3, 9], "simultan": 3, "sinc": [3, 5], "singl": [3, 4, 6, 9], "single_point_crossov": [2, 5], "singlepointcrossov": [5, 6], "site": 6, "size": 9, "slow": [6, 9], "so": [4, 5], "softwar": 0, "solut": [3, 4, 9], "solv": 0, "some": [5, 6], "sort": 9, "sourc": [3, 4, 5, 6, 7, 8, 9], "space": 9, "specif": [3, 4], "spread": [3, 9], "standard": 4, "standard_ga": [1, 2], "standardga": [2, 3], "stat": [2, 3], "statist": 3, "std": 3, "stochast": 9, "stochastic_universal_selector": [2, 5], "stochasticuniversalselector": [5, 9], "str": 3, "su": 9, "sub": 3, "submodul": [1, 2], "subpackag": 1, "subpopul": [2, 3, 7], "super": [6, 7, 8], "swap": [6, 8], "swap_mut": [2, 5], "swapmut": [5, 8], "t": 6, "take": 6, "termin": 3, "than": 5, "thei": [6, 7, 8, 9], "them": [3, 5, 6, 9], "therefor": 9, "thi": [3, 4, 5, 6, 7, 8, 9], "though": 9, "thread": 3, "threshold": 3, "thu": 6, "time": [3, 6, 7, 8], "toler": 3, "toolkit": 0, "top": 9, "total": 3, "tournament": 9, "tournament_selector": [2, 5], "tournamentselector": [5, 9], "true": [3, 4], "truncat": 9, "truncation_selector": [2, 5], "truncationselector": [5, 9], "tupl": [3, 5], "two": [3, 6, 8], "type": 4, "u": [4, 5], "unalt": 3, "unconstrain": 0, "uniform": [6, 8, 9], "uniform_crossov": [2, 5], "uniformcrossov": [5, 6], "uniformli": 5, "univers": 9, "until": 9, "updat": 3, "update_stat": [2, 3], "us": [0, 3, 4, 5, 6, 9], "user": [6, 7, 8, 9], "valid": [2, 3, 4], "valu": [2, 3, 4, 5, 8, 9], "variabl": [3, 5, 6], "verbos": 3, "veri": [4, 6, 7, 9], "verifi": [6, 7, 8], "version": [0, 4], "vrettasm": 0, "wai": 4, "want": [3, 6, 7, 8, 9], "we": [3, 5, 6, 7, 8, 9], "weaker": 9, "wheel": 9, "when": [3, 9], "where": [4, 9], "whether": 3, "which": [3, 7, 9], "whole": [3, 4], "winner": 9, "without": 4, "work": [6, 7, 8], "worst": 9, "wrapp": 5, "wrapper": 5, "x": 4, "zero": [5, 6, 7, 8]}, "titles": ["Welcome to PyGenAlgo\u2019s documentation!", "pygenalgo", "pygenalgo package", "pygenalgo.engines package", "pygenalgo.genome package", "pygenalgo.operators package", "pygenalgo.operators.crossover package", "pygenalgo.operators.migration package", "pygenalgo.operators.mutation package", "pygenalgo.operators.selection package"], "titleterms": {"": 0, "auxiliari": 3, "boltzmann_selector": 9, "chromosom": 4, "clockwise_migr": 7, "content": [0, 2, 3, 4, 5, 6, 7, 8, 9], "crossov": 6, "crossover_oper": 6, "document": 0, "engin": 3, "flip_mut": 8, "gaussian_mut": 8, "gene": 4, "generic_ga": 3, "genetic_oper": 5, "genom": 4, "indic": 0, "inverse_mut": 8, "island_model_ga": 3, "linear_rank_selector": 9, "meta_crossov": 6, "meta_migr": 7, "meta_mut": 8, "migrat": 7, "migration_oper": 7, "modul": [2, 3, 4, 5, 6, 7, 8, 9], "mutat": 8, "mutate_oper": 8, "mutli_point_crossov": 6, "oper": [5, 6, 7, 8, 9], "order_crossov": 6, "packag": [2, 3, 4, 5, 6, 7, 8, 9], "partially_mapped_crossov": 6, "position_based_crossov": 6, "pygenalgo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "random_migr": 7, "random_mut": 8, "random_selector": 9, "roulette_wheel_selector": 9, "select": 9, "select_oper": 9, "shuffle_mut": 8, "single_point_crossov": 6, "standard_ga": 3, "stochastic_universal_selector": 9, "submodul": [3, 4, 5, 6, 7, 8, 9], "subpackag": [2, 5], "swap_mut": 8, "tabl": 0, "tournament_selector": 9, "truncation_selector": 9, "uniform_crossov": 6, "welcom": 0}})